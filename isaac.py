# copied this part from here https://pythonprogramming.net/direct-input-game-python-plays-gta-v/
# direct inputs
# source to this solution and code:
# http://stackoverflow.com/questions/14489013/simulate-python-keypresses-for-controlling-a-game
# http://www.gamespp.com/directx/directInputKeyboardScanCodes.html

import pyautogui
import time
import ctypes

PUL = ctypes.POINTER(ctypes.c_ulong)
class KeyBdInput(ctypes.Structure):
    _fields_ = [("wVk", ctypes.c_ushort),
                ("wScan", ctypes.c_ushort),
                ("dwFlags", ctypes.c_ulong),
                ("time", ctypes.c_ulong),
                ("dwExtraInfo", PUL)]

class HardwareInput(ctypes.Structure):
    _fields_ = [("uMsg", ctypes.c_ulong),
                ("wParamL", ctypes.c_short),
                ("wParamH", ctypes.c_ushort)]

class MouseInput(ctypes.Structure):
    _fields_ = [("dx", ctypes.c_long),
                ("dy", ctypes.c_long),
                ("mouseData", ctypes.c_ulong),
                ("dwFlags", ctypes.c_ulong),
                ("time",ctypes.c_ulong),
                ("dwExtraInfo", PUL)]

class Input_I(ctypes.Union):
    _fields_ = [("ki", KeyBdInput),
                 ("mi", MouseInput),
                 ("hi", HardwareInput)]

class Input(ctypes.Structure):
    _fields_ = [("type", ctypes.c_ulong),
                ("ii", Input_I)]

# Actuals Functions

def PressKey(hexKeyCode):
    extra = ctypes.c_ulong(0)
    ii_ = Input_I()
    ii_.ki = KeyBdInput( 0, hexKeyCode, 0x0008, 0, ctypes.pointer(extra) )
    x = Input( ctypes.c_ulong(1), ii_ )
    ctypes.windll.user32.SendInput(1, ctypes.pointer(x), ctypes.sizeof(x))

def ReleaseKey(hexKeyCode):
    extra = ctypes.c_ulong(0)
    ii_ = Input_I()
    ii_.ki = KeyBdInput( 0, hexKeyCode, 0x0008 | 0x0002, 0, ctypes.pointer(extra) )
    x = Input( ctypes.c_ulong(1), ii_ )
    ctypes.windll.user32.SendInput(1, ctypes.pointer(x), ctypes.sizeof(x))

# This here is my stuff

# some constants
sodaCount = 1000
inventorySlots = 6
# sodaCount * left and right click * 6 inventory slots
allSodasCount = sodaCount * 2 * inventorySlots

# some functions

# a simple click is to fast
# the game only recognizes a click when it lasts about 1 ms
def simulateDoubleClick():
    pyautogui.mouseDown()
    pyautogui.mouseDown(button="right")
    time.sleep(0.001)
    pyautogui.mouseUp()
    pyautogui.mouseUp(button="right")

# main

print "isaac for python 2.7"
print "by daniel nagel"
print "written on 2.7.2019\n"
print "sodas to drink %d" % allSodasCount


start = time.time()

# focusing game window
pyautogui.moveTo(500, 500)
pyautogui.click()

# Loop for switching inventorys
for k in range(2, 8):
    print "switching to inventory slot %d" % (k-1)
    # Hex for the keys 1-6 (0x02-0x07)
    PressKey((0x0+k))
    time.sleep(0.01)
    ReleaseKey((0x0+k))
    # loop for drinking up to 2000 sodas per inventory slot
    for i in range(sodaCount+1):
        simulateDoubleClick()

end = time.time()

print "done drinking", allSodasCount, "sodas"
print "time elapsed %.1f s" % (end-start)